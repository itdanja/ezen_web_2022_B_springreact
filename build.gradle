
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}
// ----------- 그레이들 한글 인코딩 ----------------
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
// --------------------------------------------

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'



configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'   // 스프링 부트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 스프링 부트 테스터
    compileOnly 'org.projectlombok:lombok'          // 롬복
    annotationProcessor 'org.projectlombok:lombok'  // 롬복
    runtimeOnly 'com.mysql:mysql-connector-j'       // mysql 드라이버
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA [ application.properties DB연동 필수 ]
    implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // Oauth2
}

tasks.named('test') {
    useJUnitPlatform()
}


/* 스프링부트 빌드시 리액트도 같이 빌드  */
def frontendDir = "$projectDir/src/main/frontend" // 리액트 프로젝트 폴더 경로

sourceSets {
    main {
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type: Copy) { // spring jsx[리액트파일] 인식불가 => 1. 우선 리액트 실행
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}
